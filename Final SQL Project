#For this final project, I have used the database 'chinook' from: https://www.kaggle.com/datasets/alaasedeeq/chinook/code 
or you can find simply an image of the database schema here: https://www.kaggle.com/code/alaasedeeq/chinook-sql

-- Analysis --

-- #1. Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT FirstName
,LastName
,CustomerID
,Country
FROM chinook.customers
WHERE Country <> 'USA'
;

-- #2. Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE Country = 'Brazil'
;

-- #3 Find the Invoices of customers who are from Brazil. 
  The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT inv.InvoiceId
,inv.InvoiceDate
,cust.FirstName
,cust.LastName
,inv.BillingCountry
FROM chinook.invoices as inv
LEFT JOIN chinook.customers as cust
ON inv.customerId = cust.customerId
WHERE inv.BillingCountry = 'Brazil'
;

-- #4. Show the Employees who are Sales Agents.
SELECT FirstName
,LastName
,Title
FROM chinook.employees
WHERE title = 'Sales Support Agent'
;

-- #5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM chinook.invoices
;

-- #6. Provide a query that shows the invoices associated with each sales agent. 
  The resulting table should include the Sales Agent's full name.
SELECT emp.FirstName
,emp.LastName
,inv.invoiceid
FROM chinook.Employees emp
JOIN chinook.Customers cust ON emp.EmployeeId = cust.SupportRepID
JOIN chinook.invoices inv ON inv.customerid = cust.customerid
;

-- #7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT cust.FirstName as Cust_First_Name
,cust.LastName as Cust_Last_Name
,cust.Country
,SUM(inv.Total) as Total
,emp.FirstName as Emp_First_Name
,emp.LastName as Emp_Last_Name
FROM chinook.Employees emp
JOIN chinook.Customers cust ON emp.EmployeeId = cust.SupportRepID
JOIN chinook.invoices inv ON inv.customerid = cust.customerid
GROUP BY inv.customerid
;

-- #8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceId)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
;

-- #9. What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
;

-- #10. Write a query that includes the purchased track name with each invoice line ID.
SELECT invit.invoiceLineID
,trac.Name
FROM chinook.invoice_items invit
JOIN chinook.tracks trac
ON invit.TrackId = trac.TrackId
; 

-- #11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT trac.Name AS 'Track Name'
,art.name AS 'Artist'
,invit.InvoiceLineId
FROM chinook.Invoice_items invit
LEFT JOIN chinook.tracks trac ON invit.TrackId = trac.TrackId
INNER JOIN chinook.albums alb ON trac.AlbumId = alb.AlbumId
LEFT JOIN chinook.artists art ON alb.ArtistId = art.ArtistId
;

-- #12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT trac.Name as 'track name'
,alb.Title as 'album name'
,med.Name as 'media type'
,gen.Name as 'genre'
FROM chinook.tracks trac

JOIN chinook.albums alb 
ON trac.AlbumId = alb.AlbumId

JOIN chinook.media_types med 
ON trac.MediaTypeId = med.MediaTypeId

JOIN chinook.genres gen 
ON trac.GenreId = gen.GenreId
;

-- #13. Show the total sales made by each sales agent.
SELECT emp.FirstName
,emp.LastName
,ROUND (SUM (inv.Total),2)
FROM chinook.invoices inv

JOIN chinook.customers cust 
ON inv.CustomerId = cust.CustomerId

JOIN chinook.employees emp 
ON cust.SupportRepId = emp.EmployeeId

WHERE emp.title = 'Sales Support Agent'
GROUP BY emp.FirstName
;

-- 14. Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName
,emp.LastName
,ROUND (SUM(inv.Total), 2) as 'total sales'
FROM chinook.invoices inv

JOIN chinook.customers cust 
ON inv.CustomerId = cust.CustomerId

JOIN chinook.employees emp 
ON cust.SupportRepId = emp.EmployeeId

WHERE emp.title = 'Sales Support Agent'
AND inv.InvoiceDate LIKE '2009%'
GROUP BY emp.FirstName
ORDER BY 'total sales' desc
LIMIT 1
;
